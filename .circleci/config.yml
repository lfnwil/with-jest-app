version: 2.1

orbs:
  node: circleci/node@5

jobs:
  build:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Installation des dépendances
          command: npm install
      - run:
          name: Vérification de la syntaxe JavaScript
          command: find . -name "*.js" ! -path "./node_modules/*" ! -path "./dist/*" -print0 | xargs -0 -n1 node -c
      - run: echo "Building things..."

  unit-tests:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test:ci
      - store_test_results:
          path: ./test-results/

  coverage:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run coverage tests
          command: npm run test:coverage
      - store_test_results:
          path: ./test-results/

  regression-test:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Exécution des tests de régression
          command: npm run test:regression
      - store_test_results:
          path: ./test-results/

  security-check:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Security audit of dependencies
          command: npm audit --production --audit-level=high

  compatibility-test:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Vérification de la version de Node.js
          command: node --version
      - run:
          name: Installation des dépendances
          command: npm install
      - run:
          name: Exécution des tests de base
          command: npm test

  accessibility-test:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Vérification de l'accessibilité (balises alt et titres)
          command: |
            if grep -q '<img ' ./index.html && ! grep -q 'alt="' ./index.html; then
              echo "Erreur : Certaines images ne possèdent pas d'attributs 'alt'."
              exit 1
            else
              echo "Toutes les images possèdent un attribut 'alt'."
            fi
            if ! grep -q '<h1>' ./index.html || ! grep -q '<h2>' ./index.html; then
              echo "Erreur : <h1> et/ou <h2> manquent dans le HTML."
              exit 1
            else
              echo "Les balises <h1> et <h2> sont présentes."
            fi

  deploy_dev:
    executor: node/default
    steps:
      - checkout
      - run: echo "Deploying to development environment..."

  deploy_integration:
    executor: node/default
    steps:
      - checkout
      - run: echo "Deploying to integration environment..."

  deploy_prod:
    executor: node/default
    steps:
      - checkout
      - run: echo "Deploying to production environment..."

  deploy:
    executor: node/default
    steps:
      - checkout
      - run: echo "Deploying..."

workflows:
  version: 2

  build_and_test:
    jobs:
      - build
      - unit-tests:
          requires:
            - build
      - coverage:
          requires:
            - unit-tests
      - regression-test:
          requires:
            - coverage
      - security-check:
          requires:
            - regression-test
      - compatibility-test:
          requires:
            - security-check
      - accessibility-test:
          requires:
            - compatibility-test

  build-test-deploy:
    jobs:
      - build
      - unit-tests:
          requires:
            - build
      - coverage:
          requires:
            - build
      - regression-test:
          requires:
            - build
      - security-check:
          requires:
            - build
      - compatibility-test:
          requires:
            - build
      - accessibility-test:
          requires:
            - build
      - deploy_dev:
          requires:
            - accessibility-test, , compatibility-test, coverage, regression-test, security-check, unit-tests
          filters:
            branches:
              only:
                - develop
                - /^feature.*/ 
                - /^hotfix.*/  
      - deploy_integration:
          requires:
            - accessibility-test
          filters:
            branches:
              only:
                - integration
      - deploy_prod:
          requires:
            - accessibility-test
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - accessibility-test
          filters:
            branches:
              only:
                - develop
                - main
